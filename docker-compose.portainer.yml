version: '3.8'

services:
  erci_sinav_db:
    image: postgres:15
    container_name: erci-app-postgres-portainer # Changed name slightly to avoid conflict if run locally
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: P@ssw0rd # Consider using Portainer secrets for sensitive data
      POSTGRES_DB: kentkonutdb
    ports:
      - "5432:5432" # Ensure this port isn't already in use on the host
    volumes:
      - postgres_data_portainer:/var/lib/postgresql/data # Use a different volume name
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  erci_sinav_pgadmin:
    image: dpage/pgadmin4
    container_name: erci-app-pgadmin-portainer # Changed name slightly
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin # Consider using Portainer secrets
    ports:
      - "5051:80" # Ensure this port isn't already in use on the host
    depends_on:
      erci_sinav_db:
        condition: service_healthy
    restart: unless-stopped

  erci_sinav_app:
    container_name: erci-sinav-app-portainer # Changed name slightly
    image: necdetoskay/erci-sinav-app:latest # Use the image from Docker Hub
    ports:
      - "3000:3000" # Ensure this port isn't already in use on the host
    depends_on:
      erci_sinav_db:
        condition: service_healthy
    # env_file directive removed as requested
    environment:
      # Add these variables manually in Portainer's environment variables section
      DATABASE_URL: "postgresql://postgres:P@ssw0rd@erci_sinav_db:5432/kentkonutdb" # Use the service name 'erci_sinav_db' as host
      NEXTAUTH_URL: "http://YOUR_APP_URL:3000" # Replace with your actual app URL accessible by users
      NEXTAUTH_SECRET: "YOUR_NEXTAUTH_SECRET" # IMPORTANT: Replace with your actual secret from .env or generate a new one
      NEXT_PUBLIC_APP_URL: "http://YOUR_APP_URL:3000" # Replace with your actual app URL accessible by users
      # Add other necessary API keys (consider using Portainer secrets for these)
      # GOOGLE_API_KEY: "YOUR_GOOGLE_API_KEY"
      # OPENROUTER_API_KEY: "YOUR_OPENROUTER_API_KEY"
      # GROQ_API_KEY: "YOUR_GROQ_API_KEY"
    restart: unless-stopped
    # Optional: Add a healthcheck for the Next.js app
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3000"] # Adjust URL if needed inside container
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 30s

    # Entrypoint should be defined in the Docker image itself via the Dockerfile's ENTRYPOINT or CMD
    # If docker-entrypoint.sh is correctly copied and set in the Dockerfile, this line might not be needed here.
    # Check your Dockerfile's ENTRYPOINT/CMD instructions.
    # entrypoint: ["/usr/local/bin/docker-entrypoint.sh"] # Keep if needed by your image setup

volumes:
  postgres_data_portainer: # Use a different volume name
