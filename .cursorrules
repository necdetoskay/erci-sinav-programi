{
  "version": "1.0",
  "language": {
    "typescript": {
      "formatter": {
        "indentSize": 2,
        "useTabs": false,
        "lineWidth": 100,
        "singleQuote": true,
        "trailingComma": "es5",
        "semi": true,
        "bracketSpacing": true,
        "arrowParens": "always"
      },
      "linter": {
        "rules": {
          "no-console": "warn",
          "no-unused-vars": "error",
          "prefer-const": "error",
          "no-multiple-empty-lines": ["error", { "max": 1 }]
        }
      }
    },
    "javascript": {
      "formatter": {
        "indentSize": 2,
        "useTabs": false,
        "lineWidth": 100,
        "singleQuote": true,
        "trailingComma": "es5"
      }
    },
    "css": {
      "formatter": {
        "indentSize": 2,
        "useTabs": false
      }
    }
  },
  "folders": {
    "kentkonut-web": {
      "patterns": {
        "src/**/*.{ts,tsx}": {
          "linter": "eslint",
          "formatter": "prettier"
        },
        "public/images/carousel/*.{png,jpg,webp}": {
          "maxFileSize": "2MB",
          "imageRules": {
            "dimensions": {
              "desktop": {
                "width": 1920,
                "height": 1080,
                "aspectRatio": "16:9"
              },
              "tablet": {
                "width": 1024,
                "height": 768,
                "aspectRatio": "4:3"
              },
              "mobile": {
                "width": 640,
                "height": 480,
                "aspectRatio": "4:3"
              }
            },
            "formats": ["png", "jpg", "webp"],
            "quality": 85
          }
        }
      }
    },
    "kentwebadminpanel": {
      "patterns": {
        "src/**/*.{ts,tsx}": {
          "linter": "eslint",
          "formatter": "prettier"
        },
        "server/**/*.js": {
          "linter": "eslint",
          "formatter": "prettier"
        }
      }
    }
  },
  "editor": {
    "tabSize": 2,
    "insertSpaces": true,
    "rulers": [100],
    "wordWrap": "off",
    "trimTrailingWhitespace": true,
    "insertFinalNewline": true
  },
  "git": {
    "enabled": true,
    "requireCommitMessage": true,
    "commitMessageRules": {
      "maxLength": 72,
      "minLength": 10
    }
  },
  "autoFix": {
    "onSave": true,
    "typescript": true,
    "javascript": true,
    "css": true
  },
  "snippets": {
    "typescript": {
      "comp": {
        "prefix": "comp",
        "body": [
          "interface ${1:ComponentName}Props {",
          "  $2",
          "}",
          "",
          "export const ${1:ComponentName}: React.FC<${1:ComponentName}Props> = (props) => {",
          "  return (",
          "    <div>",
          "      $0",
          "    </div>",
          "  );",
          "};"
        ],
        "description": "Create a new React component"
      }
    }
  },
  "terminal": {
    "shell": {
      "windows": {
        "path": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
        "commandSeparator": ";",
        "multiLineCommandSeparator": "`",
        "defaultCommands": {
          "and": ";",
          "or": "-or",
          "pipe": "|",
          "background": "Start-Process"
        }
      },
      "linux": {
        "commandSeparator": "&&",
        "multiLineCommandSeparator": "\\",
        "defaultCommands": {
          "and": "&&",
          "or": "||",
          "pipe": "|",
          "background": "&"
        }
      }
    },
    "commandValidation": {
      "validateBeforeExecution": true,
      "autoCorrectSyntax": true,
      "showSyntaxWarnings": true
    }
  },
  "ai": {
    "analysis": {
      "mode": "thorough",
      "requirements": {
        "minAnalysisSteps": 4,
        "requiredSections": [
          "problemDefinition",
          "currentStateAnalysis",
          "alternativeSolutions",
          "riskAssessment",
          "proposedSolution"
        ],
        "documentationLevel": "detailed"
      },
      "process": {
        "steps": {
          "problemDefinition": {
            "required": true,
            "minDetailLevel": 3,
            "includeExamples": true
          },
          "currentStateAnalysis": {
            "required": true,
            "analyzeDependencies": true,
            "analyzePerformance": true,
            "analyzeSecurityImplications": true
          },
          "alternativeSolutions": {
            "required": true,
            "minAlternatives": 2,
            "compareTradeoffs": true
          },
          "riskAssessment": {
            "required": true,
            "categories": [
              "security",
              "performance",
              "maintenance",
              "scalability"
            ]
          },
          "proposedSolution": {
            "required": true,
            "includeImplementationSteps": true,
            "includeTestingStrategy": true
          }
        }
      },
      "output": {
        "format": {
          "structure": [
            "summary",
            "detailedAnalysis",
            "recommendations",
            "implementation"
          ],
          "codeExamples": true,
          "includeComments": true
        },
        "documentation": {
          "required": true,
          "includeReferences": true,
          "includeDiagrams": "when-helpful"
        }
      }
    },
    "interaction": {
      "askClarifyingQuestions": true,
      "validateAssumptions": true,
      "suggestAlternatives": true,
      "requireConfirmationForMajorChanges": true
    },
    "constraints": {
      "minAnalysisTime": "proportional",
      "maxDirectSolutions": 0,
      "requireContextGathering": true
    }
  }
} 